workflows:
  my-workflow:
    name: sdk build
    labels:
      - test
    instance_type: mac_mini_m1
    max_build_duration: 60
    environment:
      groups:
        - my-group
      vars:
        PUBLIC_ENV_VAR: $CM_BUILD_DIR/artifacts
      flutter: stable
      xcode: latest
    cache:
      cache_paths:
        - ~/.pub-cache
    triggering:
      events:
        - push
        - tag
      branch_patterns:
        - pattern: '*'
          include: true
          source: true
      tag_patterns:
        - pattern: '*'
          include: true
      cancel_previous_builds: false
    scripts:
        # - name: Build android
        #   script: flutter build aar --no-debug --no-profile
        # - name: Build ios
        #   script: flutter build ios-framework --no-debug --no-profile
        # - name: Artifacts File Consolidation
        #   script: | 
        #     mkdir $PUBLIC_ENV_VAR
        #     mv build/host/outputs/repo $PUBLIC_ENV_VAR
        #     mv build/ios/framework $PUBLIC_ENV_VAR
        #     zip -r SDK_flies.zip $PUBLIC_ENV_VAR
        - name: Configure Environment
          script: |
            if [[ $CM_BRANCH == "release/A" ]]; then
              echo "test-a"
            elif [[ $CM_BRANCH == "release/B" ]]; then
              echo "test-b"
            elif [[ $CM_BRANCH == "main" ]]; then
              echo "mainだよー"
            fi
            export SUFFIX=$(echo $CM_BRANCH | sed 's/.*\///')
            echo 1.0.0-$SUFFIX
        - name: Get Variable
          script: |
            echo $SUFFIX
            echo $CM_REPO_SLUG
            echo $GITHUB_TOKEN
            curl -L \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer $GITHUB_TOKEN"\
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/$CM_REPO_SLUG/actions/variables/$SUFFIX
    # artifacts:
    #   - SDK_flies.zip
    publishing:
      email:
        recipients:
            - shinnaga.dev@gmail.com
      scripts:
        - name: publish github releases
          script: |
            if [ -z ${CM_TAG} ]; then
              echo "Not a tag build, will not publish GitHub release"
              exit 0
            fi

            gh auth login
            gh release create "${CM_TAG}" \
              --title "sampleSDK ${CM_TAG}" \
              --notes "でっかい変更だよ！" \
              SDK_flies.zip
